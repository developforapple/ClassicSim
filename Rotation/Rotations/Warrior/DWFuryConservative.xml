<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<rotation class="Warrior" name="Fury Rage conservative stance dancing" attack_mode="melee">
    <!--
    Spell evaluation:
    <cast_if name="">
    Must specify a name. Is attempted to be cast if specified conditions are met. There is an implied condition that spell must be castable that exact instant.
    This implied condition evaluates to true if resources >= resource cost, not on gcd (if ability restricted to gcd), not on spell cd, in correct stance/form, etc.
    If no conditions are specified only this implied condition is used.

    Logic operators ("and"/"or") must be used to chain conditions if a <cast_if> has more than a single condition.


    Built-in variables:
    melee_attacking - whether player is melee attacking.
    target_health - percentage hp remaining.
    time_remaining_encounter - time remaining in encounter.
    time_remaining_execute - time remaining to Execute phase.
    time_remaining_mh_swing - time remaining to next MH swing.

    State:
    In order to simplify conditions variables can be used to implement state.
    This is mostly (only?) useful for non-instant attacks, such as Heroic Strike.

    TODO: Consider how to set trigger to change variable value.

    Order is significant in this file, first <cast_if> has highest priority.
    Remember to evaluate non-GCD abilities first, as the rotation is re-run if player was not put on GCD by (non-empty) action.

    rotation = QVector<Action*>
    Action* action = rotation.takeFirstTrue();
    while (action != nullptr) {
        action->perform();
        action = rotation.takeFirstTrue();
    }

    -->
    <description>
    <!-- TODO: When displaying description, prepend to this string something along the lines of:
    "NOTE: The following description was manually written, double check that the rotation is closely matching the description."

    qDebug() << rotation.dump_prerequisites();

    Then perhaps add a simplified output in python-style of what the rotation has been interpreted to be.

    for (int i = 0; i < actions.size(); ++i) {
        qDebug() << actions[i]->dump_printable_conditions();
    }
    -->
    A rotation that attempts to heavily conserve rage when stance dancing.

    This implies fewer Overpowers are cast since Overpower is more likely to not always be consumed before proccing again,
    but it also implies less rage lost from stance dancing.
    </description>

    <precombat_actions>
        <spell name="Bloodrage"/>
        <spell name="Battle Shout"/>
        <spell name="Berserker Stance"/>
    </precombat_actions>

    <cast_if name="Bloodrage">
        resource "Rage" less 70
    </cast_if>

    <cast_if name="Berserker Rage">
        resource "Rage" less 50
    </cast_if>

    <cast_if name="Battle Shout">
        buff_duration "Battle Shout" less 3
        or variable "time_remaining_execute" less 10
        and variable "time_remaining_execute" greater 0
        and buff_duration "Battle Shout" less 45
    </cast_if>

    <!-- General heroic strike usage -->
    <cast_if name="Heroic Strike">
        variable "time_remaining_execute" greater 3
        and resource "Rage" greater 50
    </cast_if>

    <!-- Special heroic strike usage: attempt to dump rage when Overpower is up. -->
    <cast_if name="Heroic Strike">
        variable "time_remaining_execute" greater 3
        and resource "Rage" greater 30
        and buff_duration "Overpower" greater 3
        and buff_duration "Battle Stance" is false
        and spell "Mainhand Attack" less 1.5

        <!--let "dumping_rage_before_stancing" = true-->
    </cast_if>
    
    <cast_if name="Manual Crowd Pummeler"/>

    <cast_if name="Kiss of the Spider">
        buff_duration "Death Wish" is true
    </cast_if>

    <cast_if name="Jom Gabbar">
        buff_duration "Death Wish" is true
    </cast_if>

    <cast_if name="Badge of the Swarmguard">
        buff_duration "Death Wish" is true
    </cast_if>

    <cast_if name="Slayer's Crest">
        buff_duration "Death Wish" is true
    </cast_if>

    <cast_if name="Earthstrike">
        buff_duration "Death Wish" is true
    </cast_if>

    <cast_if name="Zandalarian Hero Medallion">
        buff_duration "Death Wish" is true
    </cast_if>

    <cast_if name="Diamond Flask">
        buff_duration "Death Wish" is true
    </cast_if>

    <cast_if name="Cloudkeeper Legplates">
        buff_duration "Death Wish" is true
    </cast_if>

    <cast_if name="Death Wish">
        variable "time_remaining_encounter" less 33
        or variable "time_remaining_execute" less 3
        or variable "time_remaining_execute" greater 180
    </cast_if>

    <cast_if name="Recklessness">
        variable "time_remaining_execute" less 0
        or variable "time_remaining_encounter" less 20
    </cast_if>

    <cast_if name="Blood Fury">
        variable "time_remaining_execute" less 0
        and resource "Rage" less 50
        or variable "time_remaining_execute" greater 120
    </cast_if>

    <cast_if name="Berserking">
        variable "time_remaining_execute" less 0
        and resource "Rage" less 50
        or variable "time_remaining_execute" greater 180
    </cast_if>

    <!-- Always cast Execute if available (implicit condition). -->
    <cast_if name="Execute"/>

    <!-- Always cast Bloodthirst if not in Execute phase. -->
    <cast_if name="Bloodthirst">
        variable "time_remaining_execute" greater 0
    </cast_if>

    <!-- Whirlwind only if Bloodthirst on cooldown and not in Execute phase. -->
    <cast_if name="Whirlwind">
        spell "Bloodthirst" greater 1.5
        and variable "time_remaining_execute" greater 0
    </cast_if>

    <!-- Always cast Overpower if available. The implied condition checks that player is in correct stance, Overpower is active, etc. -->
    <cast_if name="Overpower"/>

    <cast_if name="Hamstring">
        spell "Bloodthirst" greater 1.5
        and variable "time_remaining_execute" greater 0
        and buff_duration "Overpower" is false
        and resource "Rage" greater 50
    </cast_if>

    <!-- Switch to Battle Stance -->
    <cast_if name="Battle Stance">
        variable "time_remaining_execute" greater 5
        and buff_duration "Overpower" greater 2
        and spell "Bloodthirst" greater 3
        and resource "Rage" less 40
        <!-- and variable "dumping_rage_before_stancing" is false -->
    </cast_if>

    <cast_if name="Berserker Stance">
        variable "time_remaining_execute" less 0
        or buff_duration "Overpower" is false
    </cast_if>

    <!-- Switch to dagger set before Execute (if user specified one) -->
    <!-- <cast_if name="Execute Dagger Switch">
        variable "time_remaining_execute" less 3
        and variable "execute_dagger_switch" is false

        let "execute_dagger_switch" = true
    </cast_if> -->
</rotation>